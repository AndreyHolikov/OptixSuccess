@page "/itemorders"

@inject NavigationManager NavigationManager
@inject IViewItemOrdersUseCase ViewItemOrdersUseCase
@inject IDeleteItemOrderUseCase DeleteItemOrderUseCase 

@inject IGetOrderCustomerByIdUseCase GetOrderCustomerByIdUseCase
@inject IGetOrderVendorByIdUseCase GetOrderVendorByIdUseCase
@inject IGetProductByIdUseCase GetProductByIdUseCase

<h3>Товары в заказах</h3>

@if(itemOrders != null)
{
        <table class="table table-responsive" id="myTable">
            <thead>
                <tr>
                    <th>№</th>
                    <th>Товар</th>
                    <th>Описание</th>
                    <th>Количество</th>
                    <th>Цена</th>
                    <th>Дата редактирования</th>
                    <th>Покупатель</th>
                    <th>Поставщик</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach(var itemOrder in itemOrders)
                {
                    <tr>
                        <th>
                            <InputCheckbox></InputCheckbox>
                        </th>
                        <th>
                            <a href="/product/@itemOrder.ProductId">
                                @(GetProductByIdUseCase.Execute(itemOrder.ProductId)?.Name)
                                @*@((itemOrder.ProductId == null)
                                    ? GetProductByIdUseCase.Execute(itemOrder.ProductId ?? default(int))?.Name
                                    : ""
                                )*@
                            </a>
                        </th>
                        <td>@itemOrder.Description</td>
                        <th>@itemOrder.Quantity</th>
                        <th>@itemOrder.Price</th>
                        <th>@itemOrder.Edited</th>
  
                        <th>
                            <a href="/ordercustomer/@itemOrder.OrderCustomerId">
                                @GetOrderCustomerByIdUseCase.Execute(itemOrder.OrderCustomerId)?.Edited
                            </a>
                        </th>
                        <th>
                            <a href="/ordervendor/@itemOrder.OrderVendorId">
                                @GetOrderVendorByIdUseCase.Execute(itemOrder.OrderVendorId ?? default(int))?.Edited
                            </a>
                        </th>
                        <td>
                            <button tupe="button" @onclick="@(() => EditItemOrder(itemOrder))" class="btn btn-link">Редактировать</button>
                            <button tupe="button" @onclick="@(() => DeleteItemOrder(itemOrder.ItemOrderId))" class="btn btn-link">Удалить</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <br/>
        <button type="button" @onclick="OnClickAddItemOrder" class="btn btn-primary">Добавить товар в заказ</button>
}

@code {
    private List<ItemOrder> itemOrders;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        itemOrders = ViewItemOrdersUseCase.Execute()?.ToList();
    }

    protected void OnClickAddItemOrder()
    {
        NavigationManager.NavigateTo("/additemorder");
    }

    protected void EditItemOrder(ItemOrder itemOrder)
    {
        NavigationManager.NavigateTo($"/edititemorder/{itemOrder.ItemOrderId}");
    }

    protected void DeleteItemOrder(int ItemOrderId)
    {
        DeleteItemOrderUseCase?.Delete(ItemOrderId);
        LoadItemOrders();
    }

    private void LoadItemOrders()
    {
        itemOrders = ViewItemOrdersUseCase.Execute()?.ToList();
    }
}
