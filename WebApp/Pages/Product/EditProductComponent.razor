@page "/editproduct/{productId}"
@using UseCases

@inject NavigationManager NavigationManager
@inject IEditProductUseCase EditProductUseCase
@inject IGetProductByIdUseCase GetProductByIdUseCase 

<h3>Edit Product</h3>

@if(product != null)
{
    <EditForm Model="product"  OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <InputText id="description" @bind-Value="product.Description" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCansel">Cansel</button>
    </EditForm>
}

@code {
    [Parameter]
    public string ProductId { get; set; }

    private Product product;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        product = new Product();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (int.TryParse(this.ProductId, out int iProductId)) 
        {
            this.product = GetProductByIdUseCase.Execute(iProductId);
        }

    }

    private void OnValidSubmit()
    {
        EditProductUseCase.Execute(product);
        NavigationManager.NavigateTo("/products");
    }

    private void OnCansel()
    {
        NavigationManager.NavigateTo("/products");
    }
}
