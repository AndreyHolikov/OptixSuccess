@page "/categories"

@inject NavigationManager NavigationManager
@inject UseCases.IViewCategoriesUseCase ViewCategoriesUseCase
@inject UseCases.IDeleteCategoryUseCase DeleteCategoryUseCase 

<h3>Manage Categories</h3>

@if(categories != null)
{
        <table class="table" id="myTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach(var category in categories)
                {
                    <tr>
                        <td>@category.Name</td>
                        <td>@category.Description</td>
                        <td>
                            <button tupe="button" @onclick="@(() => EditCategory(category))" class="btn btn-light">Edit</button>
                            <button tupe="button" @onclick="@(() => DeleteCategory(category.СategoryId))" class="btn btn-light">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <br/>
        <button type="button" @onclick="OnClickAddCategory" class="btn btn-primary">Add Category</button>
}

@code {
    private List<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        categories = ViewCategoriesUseCase.Execute()?.ToList();
    }

    protected void OnClickAddCategory()
    {
        NavigationManager.NavigateTo("/addcategory");
    }

    protected void EditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/editcategory/{category.СategoryId}");
    }

    protected void DeleteCategory(int CategoryId)
    {
        DeleteCategoryUseCase?.Delete(CategoryId);
        LoadCategories();
    }

    private void LoadCategories()
    {
        categories = ViewCategoriesUseCase.Execute()?.ToList();
    }
}
