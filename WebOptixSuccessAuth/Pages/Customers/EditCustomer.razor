@page "/edit-customer/{CustomerId:int}"

@using Microsoft.EntityFrameworkCore
@using CoreBusiness.Models
@using System.Globalization
@inject Plugins.DataStore.SQL.AppDbContext dbContext
@inject NavigationManager NavigationManager
@using WebOptixSuccessAuth
@using WebOptixSuccessAuth.Components

<PageTitle>Редактирование покупателя. (Id: @CustomerId) - OptixSM</PageTitle>
<h3>Редактирование покупателя. (Id: @CustomerId)</h3>

@if (customer == null)
{
    <AlertMessageComponent AlertClass="alert alert-danger" Message="@alertMessage" />
} 
else 
{
    <EditForm Model="customer"  OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="company">Организация</label>
            <InputText id="company" @bind-Value="customer.Company" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="name">Login</label>
            <InputText id="name" @bind-Value="customer.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="fullname">ФИО</label>
            <InputText id="fullname" @bind-Value="customer.Fullname" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="customer.Email" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="phone">Телефон</label>
            <InputText id="phone" @bind-Value="customer.Phone" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="description">Описание</label>
            <InputTextArea id="description" @bind-Value="customer.Description" class="form-control"></InputTextArea>
        </div>

        <div class="form-group">
            <label for="password">Пароль</label>
            <InputText id="password" @bind-Value="customer.Password" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCansel">Cansel</button>
    </EditForm>
}

@code {
    [Parameter]
    public int CustomerId { get; set; }
    //public string CustomerId { get; set; }
    private Customer? customer { get; set; }

    private string alertMessage { get; set; }   = $"Покупатель не найден.";

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        this.customer = dbContext.Customers.Find(CustomerId);
        //if (int.TryParse(this.CustomerId, out int iCustomerid)) 
        //{
        //    this.customer = dbContext.Customers.Find(iCustomerid);
        //}
        alertMessage = $" (id: {CustomerId})";
    }

    private void OnValidSubmit()
    {
        if (customer != null)
        {
            dbContext.Customers.Update(customer);
            dbContext.SaveChanges();
            StateHasChanged();
        }
    }

    private void OnCansel()
    {
        NavigationManager.NavigateTo("/customers");
    }
}